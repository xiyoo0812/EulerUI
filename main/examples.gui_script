local Euler = require "euler.euler"

local euler = Euler()

function init(self)
    msg.post(".", "acquire_input_focus")

    self.image = euler:init_image("defold")
    self.image:register_click(function(img)
        print("click image: " .. img.id)
    end)
    
    self.slider = euler:init_slider("slider", 30)
    
    self.progress_bar = euler:init_progress_bar("progress_bar", 30)

    self.radio_group = euler:init_radio_group()
    local radio_a = euler:init_radio("radio_a", true)
    local radio_b = euler:init_radio("radio_b", false)
    local radio_c = euler:init_radio("radio_c", false)
    self.radio_group:add_radio(radio_a, 40)
    self.radio_group:add_radio(radio_b, 60)
    self.radio_group:add_radio(radio_c, 80)
    self.radio_group:register_changed(function(box, value)
        print("click radio: " .. box.id)
        self.progress_bar:set_progress(value)
    end)
    
    self.switch_a = euler:init_switch("switch_a", true)
    self.switch_a:register_changed(function(box)
        print("click switch: " .. box.id)
    end)
    self.switch_b = euler:init_switch("switch_b", false)
    self.switch_b:register_changed(function(box)
        print("click switch: " .. box.id)
    end)
    
    self.checkbox_a = euler:init_checkbox("checkbox_a", true)
    self.checkbox_a:register_changed(function(box)
        print("click checkbox: " .. box.id)
    end)
    self.checkbox_b = euler:init_checkbox("checkbox_b", false)
    self.checkbox_b:register_changed(function(box)
        print("click checkbox: " .. box.id)
    end)
    
    self.button_print = euler:init_button("button_print")
    self.button_print:register_click(function(btn)
        print("Slider: " .. tostring(self.slider:get_percent()))
        print("Switch A: " .. tostring(self.switch_a:is_checked()))
        print("Switch B: " .. tostring(self.switch_b:is_checked()))
        print("Checkbox A: " .. tostring(self.checkbox_a:is_checked()))
        print("Checkbox B: " .. tostring(self.checkbox_b:is_checked()))
        print("Radio Group: " .. tostring(self.radio_group:get_value()))
        print("Progress Bar: " .. tostring(self.progress_bar:get_percent()))
    end)

    self.button_toggle_euler = euler:init_button("button_toggle_euler")
    self.button_toggle_euler:register_click(function(btn)
        local enabled = not gui.is_enabled(gui.get_node("euler_root"))
        gui.set_enabled(gui.get_node("euler_root"), enabled)
        btn:set_text(enabled and "Hide Euler" or "Show Euler")
    end)

    self.button_euler = euler:init_button("button_euler")
    self.button_euler:register_click(function(btn)
        print("I'm Euler")
    end)
end

function on_input(self, action_id, action)
    euler:on_input(action_id, action)
    
    --[[
    self.input_default  = euler:input("input_default", action_id, action, gui.KEYBOARD_TYPE_DEFAULT, "Default text")
    self.input_email    = euler:input("input_email", action_id, action, gui.KEYBOARD_TYPE_EMAIL, "Email")
    self.input_number   = euler:input("input_number", action_id, action, gui.KEYBOARD_TYPE_NUMBER_PAD, "Number")
    self.input_password = euler:input("input_password", action_id, action, gui.KEYBOARD_TYPE_PASSWORD, "Password")
    self.input_smaller  = euler:input("input_smaller", action_id, action, gui.KEYBOARD_TYPE_DEFAULT, "Tiny input")

    self.slider_value = euler:slider("slider", action_id, action, -1.0, 1.0, self.slider_value)
    
    self.scrollarea = euler:scrollarea("scrollarea", action_id, action, self.scrollarea, function(self, action_id, action)
        local tmp_func = function ()
        print("button pressed in scrollarea")
        end
        euler:button("scrollarea_button", action_id, action, tmp_func)
        euler:button("scrollarea_button1", action_id, action, tmp_func)
        euler:button("scrollarea_button2", action_id, action, tmp_func)
        euler:button("scrollarea_button3", action_id, action, tmp_func)
        euler:button("scrollarea_button4", action_id, action, tmp_func)
        euler:button("scrollarea_button5", action_id, action, tmp_func)
        euler:button("scrollarea_button6", action_id, action, tmp_func)
        euler:button("scrollarea_button7", action_id, action, tmp_func)
        euler:button("scrollarea_button8", action_id, action, tmp_func)
        euler:button("scrollarea_button9", action_id, action, tmp_func)
    end)
    
    local node = gui.get_node("defold")
    euler:hit(node, action_id, action, function()
        gui.cancel_animation(node, "scale")
    gui.set_scale(node, vmath.vector3(1.2))
    gui.animate(node, "scale", 1.0, gui.EASING_OUTELASTIC, 0.8)
    end)
    ]]
end
